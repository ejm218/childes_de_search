# IMPORT CHILDES SEARCH FUNCTIONS
import os
import matplotlib as plt
os.chdir("/Users/academic/Documents/childes_de_search")
functions_file = open("childes_search.py", "r")
functions_file = functions_file.read()
exec(functions_file)

# IMPORT THE CORPORA FOR USE IN THE SEARCH
# INCLUSION CRITERIA: AGES 1-6
chang1 = CHILDESCorpusReader(corpus_root, "Chang1/.*.xml") # youngest age 3;0
chang2 = CHILDESCorpusReader(corpus_root, "Chang2/.*.xml") # youngest age 3;0
changplay = CHILDESCorpusReader(corpus_root, "ChangPlay/.*.xml") # youngest age 3;0
erbaugh = CHILDESCorpusReader(corpus_root, "Erbaugh/.*.xml") # youngest age 2;0
lizhou = CHILDESCorpusReader(corpus_root, "LiZhou/.*.xml") # youngest age 3;0
tong = CHILDESCorpusReader(corpus_root, "Tong/.*.xml") # youngest age 1;7
zhou1 = CHILDESCorpusReader(corpus_root, "Zhou1/.*.xml") # youngest age 3;0
zhou2 = CHILDESCorpusReader(corpus_root, "Zhou2/.*.xml") # youngest age 3;0
zhou3 = CHILDESCorpusReader(corpus_root, "Zhou3/.*.xml") # youngest age 0;8
corpora = [chang1, chang2, changplay, erbaugh, lizhou, tong, zhou1, zhou2, zhou3]

# what do I want to find out
# when de emerges
# what types of items it is used to modify
np_search = "n:?[a-z]*|pro:?[a-z]*" # finds all nouns and pronouns
vp_search = "v:?[a-z]*" # finds all verbs

data = create_df(corpus_search_MOR(erbaugh, "çš„"))
data = data.replace(np_search, "NP", regex=True)
data = data.replace(vp_search, "VP", regex=True)

modifier_types = data["preceding_item_type"].value_counts()
print(modifier_types)
head_types = data["succeeding_item_type"].value_counts()
print(head_types)
variety = data["preceding_item_type"].nunique()
print(variety)

#"np_head", "vp_head", "sentence_final", "prec_adj", "prec_np", "prec_vp"

ages = list(set(data["age"].tolist()))
print(len(ages))
#count_data = pd.DataFrame(columns= ["age", "total_de", "np_head"])
#print(data.groupby("age").succeeding_item_type.nunique())
#for age in ages:
#    target = data.where(data["age"] == age)
#    count_data["age"] = age
#    count_data["total_de"] = len(target)
#    count_data["np_head"] = len(target.where(target["succeeding_item_type"] == "NP"))

#print(count_data.info())

# for each month i want to
    # see number of sentence-final de
    # see number of adj preceding de
    # see number of n prceding de
    # see number of
